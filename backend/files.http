### 0. 初始化配置
@host = http://localhost:8080
@contentType = application/json

### 1. 用户注册
# 注意：实际生产环境需要更复杂的密码规则
POST http://localhost:8080/user/register
    ?username=fileuser
    &password=123456

### 2. 用户登录 → 获取令牌
POST http://localhost:8080/user/login
    ?username=fileuser
    &password=123456

> {% client.global.set("auther_token", response.body.data) %}

### 3. 创建根文件夹
POST http://localhost:8080/folders/create
    ?parentId=0
    &folderName=我的云盘
Authorization: {{auther_token}}

> {%
    client.assert(response.status === 200, "根文件夹创建失败");
    client.global.set("rootFolderId", response.body.data.id);
%}

### 4. 创建子文件夹
POST http://localhost:8080/folders/create
    ?parentId={{rootFolderId}}
    &folderName=私人文件
Authorization: {{auther_token}}

> {%
    client.assert(response.status === 200, "子文件夹创建失败");
    client.global.set("subFolderId", response.body.data.id);
%}

### 5. 文件上传到根目录
POST http://localhost:8080/files/upload
    ?folderId={{rootFolderId}}
Authorization: {{auther_token}}
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="file"; filename="test-document.txt"

< ./sample-files/test-document.txt
--boundary--

> {%
    client.assert(response.status === 200, "文件上传失败");
    client.global.set("uploadedFileId", response.body.data.id);
%}

### 6. 移动文件到子文件夹
PUT http://localhost:8080/files/{{uploadedFileId}}/move
    ?targetFolderId={{subFolderId}}
Authorization: {{auther_token}}

### 7. 获取子文件夹内容
GET http://localhost:8080/folders/{{subFolderId}}/contents
Authorization: {{auther_token}}

> {%
    client.assert(response.status === 200, "获取内容失败");
    client.assert(response.body.data.files.length > 0, "文件移动失败");
%}

### 8. 下载移动后的文件
GET http://localhost:8080/files/{{uploadedFileId}}/download
Authorization: {{auther_token}}

### 9. 删除测试文件
DELETE http://localhost:8080/files/{{uploadedFileId}}
Authorization: {{auther_token}}

### 10. 重命名文件夹
PUT http://localhost:8080/folders/{{subFolderId}}/rename?newName=good
Authorization: {{auther_token}}

### 11. 创建文本文件
POST http://localhost:8080/files/create-text
Content-Type: application/x-www-form-urlencoded
Authorization: {{auther_token}}


content=hello 我可以实现查看功能了哦&fileName=测试文件2&folderId={{subFolderId}}


> {%
    client.assert(response.status === 200, "文件上传失败");
    client.global.set("FileId", response.body.data.id);
%}

### 11.1 查看文本文件内容
GET http://localhost:8080/files/{{FileId}}/content
Authorization: {{auther_token}}

> {%
    client.assert(response.status === 200, "获取文件内容失败");
    client.assert(response.body.data === "这是一个测试文本内容", "文件内容不匹配");
%}

### 12.文件重命名
PUT http://localhost:8080/files/{{FileId}}/rename?newName=新文件名
Authorization: {{auther_token}}


### 13. 删除测试文件夹
DELETE http://localhost:8080/folders/{{rootFolderId}}
Authorization: {{auther_token}}


