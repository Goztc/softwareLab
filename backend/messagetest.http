### 1. 用户注册
POST http://localhost:8080/user/register
    ?username=hhhhh
    &password=test123

### 2. 用户登录
POST http://localhost:8080/user/login
    ?username=fileuser
    &password=123456

> {% client.global.set("auther_token", response.body.data) %}

### 3. 更新用户头像 (使用你提供的图片URL)
PATCH http://localhost:8080/user/updateAvatar
    ?avatarUrl=https://aircraft-carrier.github.io/images/avatar.jpg
Authorization: {{auther_token}}

### 4. 创建聊天会话
POST http://localhost:8080/chat/sessions
    ?sessionName=newOne
Authorization: {{auther_token}}

### 4.1 获得会话
GET http://localhost:8080/chat/sessions
Authorization: {{auther_token}}

### 4.2
POST http://localhost:8080/chat/sessions
    ?sessionName=%E6%96%B0%E5%AF%B9%E8%AF%9D
Authorization: {{auther_token}}

### 5. 发送消息
POST http://localhost:8080/chat/messages
    ?sessionId=3
Authorization: {{auther_token}}
Content-Type: application/json

{
  "content": "我喜欢什么？"
}

### 6. 获取消息历史
GET http://localhost:8080/chat/messages
    ?sessionId=1
Authorization: {{auther_token}}

### 6.1. 获取指定消息详情
GET http://localhost:8080/chat/messages/1
Authorization: {{auther_token}}

### 6.2. 重命名会话
PUT http://localhost:8080/chat/sessions/1
Authorization: {{auther_token}}
Content-Type: application/json

{
  "sessionName": "重命名后的会话"
}

### 6.3. 清除会话历史
DELETE http://localhost:8080/chat/sessions/2/history
Authorization: {{auther_token}}

### 6.4. 删除会话
DELETE http://localhost:8080/chat/sessions/2
Authorization: {{auther_token}}

### 6.5. 测试连续对话功能
POST http://localhost:8080/chat/messages
    ?sessionId=2
Authorization: {{auther_token}}
Content-Type: application/json

{
  "content": "记住，我喜欢猫"
}

### 6.6. 继续对话（测试历史记录传递）
POST http://localhost:8080/chat/messages
    ?sessionId=2
Authorization: {{auther_token}}
Content-Type: application/json

{
  "content": "我喜欢什么？"
}

### 7. 更新密码
PATCH http://localhost:8080/user/updatePwd
Authorization: {{auther_token}}
Content-Type: application/json

{
  "old_pwd": "test123",
  "new_pwd": "newpassword123",
  "re_pwd": "newpassword123"
}
